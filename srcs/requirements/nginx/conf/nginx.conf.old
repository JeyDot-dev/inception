user                    www;
worker_processes        auto;

events {
    worker_connections  1024;
}
http {
    include                 /etc/nginx/mime.types; #include additional mime.types
    default_type            application/octet-stream; #default type when no mime
    sendfile                on; #file manipulation optimisation (sys call level)
    keepalive_timeout       20;


    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        
        ssl_certificate         /ssl/jsousa-a.crt;
        ssl_certificate_key     /ssl/jsousa-a.key;
        ssl_protocols           TLSv1.2 TLSv1.3;

        server_name _;
        location / {
            return 404;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name $SERVER_NAME;
        location / {
            return 301 https://$SERVER_NAME$request_uri;
        }
    }

    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             $SERVER_NAME;

        ssl_certificate         /ssl/jsousa-a.crt;
        ssl_certificate_key     /ssl/jsousa-a.key;
        ssl_protocols           TLSv1.2 TLSv1.3;

        root                    /www;
        index                   index.php;
        client_max_body_size    64m;
        error_page              500 502 503 504 /50x.html;

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }
        location = /50x.html {
            root /var/lib/nginx/html;
        }
        location ~ \.(gif|jpg|png)$ {
            root /www/img;
        }
        location ~ \.php {
            fastcgi_split_path_info         ^(.+?\.php)(/.*)$;
            fastcgi_param   HTTP_PROXY      "";
            fastcgi_index   index.php;

            fastcgi_pass                    wordpress:9000;
            include                         fastcgi_params;
            fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param   SCRIPT_NAME     $fastcgi_script_name;
            # return 200 $document_root$fastcgi_script_name
        }
    }
}
